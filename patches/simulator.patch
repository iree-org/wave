diff --git a/tests/conftest.py b/tests/conftest.py
index 9383c12..5775bd3 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -7,6 +7,8 @@
 import os
 import pytest
 import sys
+from hip import hip
+hip.hipInit(0)
 import torch
 
 # Add the project root to Python path to ensure aplp_lib can be found
diff --git a/tests/kernel/wave/wave_gemm_test.py b/tests/kernel/wave/wave_gemm_test.py
index b75f311..42d2fce 100644
--- a/tests/kernel/wave/wave_gemm_test.py
+++ b/tests/kernel/wave/wave_gemm_test.py
@@ -4,6 +4,9 @@
 # See https://llvm.org/LICENSE.txt for license information.
 # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
 
+from hip import hip
+hip.hipInit(0)
+
 import pytest
 import torch
 import wave_lang.kernel.lang as tkl
@@ -15,11 +18,11 @@ from wave_lang.kernel.wave.utils.general_utils import (
 from wave_lang.kernel.wave.utils.run_utils import (
     set_default_run_config,
 )
-from wave_lang.kernel.wave.utils.torch_utils import (
-    device_randn,
-    device_randint,
-    device_zeros,
-)
+# from wave_lang.kernel.wave.utils.torch_utils import (
+    # device_randn,
+    # device_randint,
+    # device_zeros,
+# )
 from wave_lang.kernel.wave.iree_utils import generate_iree_ref
 from wave_lang.kernel.wave.scheduling.schedule import SchedulingType
 from wave_lang.kernel.wave.compile import WaveCompileOptions, wave_compile
@@ -193,17 +196,17 @@ def testPureGemm(
     options = set_default_run_config(options)
     gemm = wave_compile(options, gemm)
 
-    a = device_randn(shape[0], shape[2], dtype=datatype)
-    b = device_randn(shape[1], shape[2], dtype=datatype)
-    c = device_zeros(shape[0], shape[1], dtype=torch.float32)
+    a = torch.randn(shape[0], shape[2], dtype=datatype).cuda()
+    b = torch.randn(shape[1], shape[2], dtype=datatype).cuda()
+    c = torch.zeros(shape[0], shape[1], dtype=torch.float32).cuda()
     gemm(a, b, c)
 
     if run_bench:
         options.benchmark_results_file = perf_filename_iree
 
-    iree_ref = device_zeros(shape[0], shape[1], dtype=torch.float32)
+    iree_ref = torch.zeros(shape[0], shape[1], dtype=torch.float32).cuda()
     generate_iree_ref("mmt", [a, b], [iree_ref], options)
-    assert_close(c, iree_ref, check_device=False)
+    assert_close(c.cpu(), iree_ref.cpu(), check_device=False)
 
 
 _xfail = lambda *a: pytest.param(*a, marks=pytest.mark.xfail)
diff --git a/wave_lang/kernel/wave/runtime/runtime.cpp b/wave_lang/kernel/wave/runtime/runtime.cpp
index 87851b5..697da57 100644
--- a/wave_lang/kernel/wave/runtime/runtime.cpp
+++ b/wave_lang/kernel/wave/runtime/runtime.cpp
@@ -76,7 +76,7 @@ static void load_hip_functions() {
   module_handle_t module = nullptr;
 
 #if defined(__linux__)
-  module = dlopen("libamdhip64.so", RTLD_NOW);
+  module = dlopen("/opt/rocm/lib/libamdhip64.so", RTLD_NOW);
   if (!module) {
     throw std::runtime_error("Failed to load libamdhip64.so: " +
                              std::string(dlerror()));
diff --git a/wave_lang/kernel/wave/templates/gemm.py b/wave_lang/kernel/wave/templates/gemm.py
index 408df9a..85079fe 100644
--- a/wave_lang/kernel/wave/templates/gemm.py
+++ b/wave_lang/kernel/wave/templates/gemm.py
@@ -4,6 +4,9 @@
 # See https://llvm.org/LICENSE.txt for license information.
 # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
 
+from hip import hip
+hip.hipInit(0)
+
 import torch
 from typing import Sequence
 
